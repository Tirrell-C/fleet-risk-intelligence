# GraphQL schema configuration for gqlgen
schema:
  - graph/*.graphqls

exec:
  filename: graph/generated.go
  package: graph

model:
  filename: graph/model/models_gen.go
  package: model

resolver:
  layout: follow-schema
  dir: graph
  package: graph
  filename_template: "{name}.resolvers.go"

# Optional: skip running `go mod tidy` when generating code
skip_mod_tidy: true

# Model mappings to use existing types
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Fleet:
    model: github.com/Tirrell-C/fleet-risk-intelligence/pkg/models.Fleet
  Driver:
    model: github.com/Tirrell-C/fleet-risk-intelligence/pkg/models.Driver
  Vehicle:
    model: github.com/Tirrell-C/fleet-risk-intelligence/pkg/models.Vehicle
  TelemetryEvent:
    model: github.com/Tirrell-C/fleet-risk-intelligence/pkg/models.TelemetryEvent
  RiskEvent:
    model: github.com/Tirrell-C/fleet-risk-intelligence/pkg/models.RiskEvent
  Alert:
    model: github.com/Tirrell-C/fleet-risk-intelligence/pkg/models.Alert
  DriverScore:
    model: github.com/Tirrell-C/fleet-risk-intelligence/pkg/models.DriverScore